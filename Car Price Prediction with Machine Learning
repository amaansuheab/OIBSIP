import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error,r2_score
import math

data=pd.read_csv("car data.csv")
print(data.head(5))

print(data.isnull().sum())
print(data["Car_Name"].value_counts())



print(data.columns)

data['Car_Age'] = 2025 - data['Year']
data.drop(['Year', 'Car_Name'], axis=1, inplace=True)

categorical_cols = ['Fuel_Type', 'Transmission', 'Selling_type']

data=pd.get_dummies(data,columns=["Fuel_Type", 'Transmission', 'Selling_type'],drop_first=True)
print(data.head(5))
print(data.columns)

y=data["Selling_Price"]
data1=data.drop(columns=["Selling_Price"])

x=data1
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.25,random_state=100)


print(x)
print(y)


model=RandomForestRegressor()
model.fit(xtrain,ytrain)
pred=model.predict(xtest)
Rootmse=math.sqrt(mean_squared_error(pred,ytest))
print(Rootmse)

print(model.score(xtest,ytest))


plt.scatter(ytest, pred)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs Predicted")
plt.plot([0, max(ytest)], [0, max(ytest)], 'r--')  
plt.grid(True)
plt.show()



